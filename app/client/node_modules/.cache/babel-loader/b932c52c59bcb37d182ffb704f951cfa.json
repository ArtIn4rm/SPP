{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\SPP\\\\SPP\\\\app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Context } from './index';\nimport { Spinner } from 'react-bootstrap';\nimport { BrowserRouter } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport AppRouter from './components/AppRouter';\nimport { check } from './api/borrowersApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  /*useEffect(() => {\r\n    check().then((data) => {\r\n      user.setUser(data)\r\n      user.setIsAuth(true, data.role, data.id)\r\n    }).finally(() => {setLoading(false)})\r\n  }, [])\r\n    if(loading) {\r\n    return <Spinner className=\"d-flex justify-content-center align-items-center\" animation=\"border\"></Spinner>\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lAyFtlWCmDInXwweAEW0Ad2eQE4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/test/SPP/SPP/app/client/src/App.js"],"names":["React","useContext","useState","useEffect","Context","Spinner","BrowserRouter","NavBar","AppRouter","check","App","user","loading","setLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,KAAR,QAAoB,oBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAACC,IAAAA;AAAD,MAASV,UAAU,CAACG,OAAD,CAAzB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArBD;;GAAMQ,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\r\nimport {Context} from './index'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport NavBar from './components/NavBar'\r\nimport AppRouter from './components/AppRouter'\r\nimport {check} from './api/borrowersApi'\r\n\r\nconst App = () => {\r\n  const {user} = useContext(Context)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  /*useEffect(() => {\r\n    check().then((data) => {\r\n      user.setUser(data)\r\n      user.setIsAuth(true, data.role, data.id)\r\n    }).finally(() => {setLoading(false)})\r\n  }, [])\r\n\r\n  if(loading) {\r\n    return <Spinner className=\"d-flex justify-content-center align-items-center\" animation=\"border\"></Spinner>\r\n  }*/\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <NavBar/>\r\n      <AppRouter />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}