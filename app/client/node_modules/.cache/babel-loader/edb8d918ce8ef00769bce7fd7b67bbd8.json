{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\SPP\\\\SPP\\\\app\\\\client\\\\src\\\\components\\\\AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { publicRoutes, personRoutes, companyRoutes, consultantRoutes, inspectorRoutes, accountantRoutes } from '../routes';\nimport { TYPES_ROUTE } from '../utils/consts';\nimport { Context } from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [user.isAuth.isPerson && personRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    }), user.isAuth.isCompany && companyRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    }), user.isAuth.isConsultant && consultantRoutes.map(_ref3 => {\n      let {\n        path,\n        Component\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    }), user.isAuth.isInspector && inspectorRoutes.map(_ref4 => {\n      let {\n        path,\n        Component\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }), user.isAuth.isAccountant && accountantRoutes.map(_ref5 => {\n      let {\n        path,\n        Component\n      } = _ref5;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    }), publicRoutes.map(_ref6 => {\n      let {\n        path,\n        Component\n      } = _ref6;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: TYPES_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"JGtbL9nF23m+KDtp3kj55mw9GTc=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["D:/test/SPP/SPP/app/client/src/components/AppRouter.js"],"names":["React","useContext","Switch","Route","Redirect","publicRoutes","personRoutes","companyRoutes","consultantRoutes","inspectorRoutes","accountantRoutes","TYPES_ROUTE","Context","AppRouter","user","isAuth","isPerson","map","path","Component","isCompany","isConsultant","isInspector","isAccountant"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport { publicRoutes, personRoutes, companyRoutes, consultantRoutes, \r\n    inspectorRoutes, accountantRoutes} from '../routes';\r\nimport { TYPES_ROUTE } from '../utils/consts';\r\nimport {Context} from '../index'\r\n\r\nconst AppRouter = () => {\r\n    const {user} = useContext(Context)\r\n    return (\r\n        <Switch>\r\n            {user.isAuth.isPerson && personRoutes.map(({path, Component}) => \r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {user.isAuth.isCompany && companyRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {user.isAuth.isConsultant && consultantRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {user.isAuth.isInspector && inspectorRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {user.isAuth.isAccountant && accountantRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            <Redirect to={TYPES_ROUTE}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}