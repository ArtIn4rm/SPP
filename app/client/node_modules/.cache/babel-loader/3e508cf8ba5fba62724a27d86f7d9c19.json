{"ast":null,"code":"import { $auth, $host } from './index';\nimport jwt_decode from 'jwt-decode';\nexport const sendCredit = async info => {\n  const {\n    data\n  } = await $auth.post('', info);\n  return data;\n};\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await $host.post('/user/login', {\n    email,\n    password\n  });\n  localStorage.setItem('token', data.token);\n  return {\n    user: jwt_decode(data.token),\n    id: data.id\n  };\n};\nexport const register = async info => {\n  const {\n    data\n  } = await $host.post('/user/registrate', {\n    info: { ...info,\n      role: 'Person'\n    }\n  });\n  localStorage.setItem('token', data.token);\n  return {\n    user: jwt_decode(data.token),\n    id: data.id\n  };\n};\nexport const check = async () => {\n  const {\n    data\n  } = await $auth.get('/user/auth');\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};\nexport const setPerson = async info => {\n  const {\n    data\n  } = await $auth.post('/user/person/info/income', { ...info,\n    id: localStorage.getItem('id')\n  });\n  return data;\n};\nexport const fetchPerson = async () => {\n  const {\n    data\n  } = await $auth.get('/user/person/info/income', {\n    params: {\n      id: localStorage.getItem('id')\n    }\n  });\n  return data;\n};\nexport const addPledge = async info => {\n  const {\n    data\n  } = await $auth.post('/user/person/info/pledge', { ...info,\n    borrowerId: localStorage.getItem('id')\n  });\n  return data;\n};\nexport const addGuarantor = async info => {\n  const {\n    data\n  } = await $auth.post('/user/person/info/guarantor', { ...info,\n    id: localStorage.getItem('id')\n  });\n  return data;\n};\nexport const setCompany = async () => {};\nexport const setFinancies = async () => {};\nexport const addIncome = async () => {};","map":{"version":3,"sources":["D:/test/SPP/SPP/app/client/src/api/borrowersApi.js"],"names":["$auth","$host","jwt_decode","sendCredit","info","data","post","login","email","password","localStorage","setItem","token","user","id","register","role","check","get","setPerson","getItem","fetchPerson","params","addPledge","borrowerId","addGuarantor","setCompany","setFinancies","addIncome"],"mappings":"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","sourcesContent":["import {$auth, $host} from './index'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const sendCredit = async (info) => {\r\n    const {data} = await $auth.post('', info)\r\n    return data\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('/user/login', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return {user: jwt_decode(data.token), id: data.id}\r\n}\r\n\r\nexport const register = async (info) => {\r\n    const {data} = await $host.post('/user/registrate', {info: {...info, role: 'Person'}})\r\n    localStorage.setItem('token', data.token)\r\n    return {user: jwt_decode(data.token), id: data.id}\r\n}\r\n\r\nexport const check = async () => {\r\n    const {data} = await $auth.get('/user/auth')\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const setPerson = async (info) => {\r\n    const {data} = await $auth.post('/user/person/info/income', {...info, id: localStorage.getItem('id'), })\r\n    return data\r\n}\r\n\r\nexport const fetchPerson = async () => {\r\n    const {data} = await $auth.get('/user/person/info/income', {params: {id: localStorage.getItem('id')}})\r\n    return data\r\n}\r\n\r\nexport const addPledge = async (info) => {\r\n    const {data} = await $auth.post('/user/person/info/pledge', { ...info, \r\n        borrowerId: localStorage.getItem('id'), })\r\n    return data\r\n}\r\n\r\nexport const addGuarantor = async (info) => {\r\n    const {data} = await $auth.post('/user/person/info/guarantor', {...info, id: localStorage.getItem('id')})\r\n    return data\r\n}\r\n\r\nexport const setCompany = async () => {\r\n\r\n}\r\n\r\nexport const setFinancies = async () => {\r\n\r\n}\r\n\r\nexport const addIncome = async () => {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}