{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\SPP\\\\SPP\\\\app\\\\client\\\\src\\\\components\\\\AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { publicRoutes, personRoutes, companyRoutes, consultantRoutes, inspectorRoutes, accountantRoutes } from '../routes';\nimport { TYPES_ROUTE } from '../utils/consts';\nimport { Context } from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [\" \", user.isAuth.isPerson && personRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    }), \" \", user.isAuth.isCompany && companyRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }), \" \", user.isAuth.isConsultant && consultantRoutes.map(_ref3 => {\n      let {\n        path,\n        Component\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    }), \" \", user.isAuth.isInspector && inspectorRoutes.map(_ref4 => {\n      let {\n        path,\n        Component\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }), \" \", user.isAuth.isAccountant && accountantRoutes.map(_ref5 => {\n      let {\n        path,\n        Component\n      } = _ref5;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }), \" \", publicRoutes.map(_ref6 => {\n      let {\n        path,\n        Component\n      } = _ref6;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }), \" \", /*#__PURE__*/_jsxDEV(Redirect, {\n      to: TYPES_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }, this);\n};\n\n_s(AppRouter, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["D:/test/SPP/SPP/app/client/src/components/AppRouter.js"],"names":["React","useContext","Switch","Route","Redirect","publicRoutes","personRoutes","companyRoutes","consultantRoutes","inspectorRoutes","accountantRoutes","TYPES_ROUTE","Context","AppRouter","user","isAuth","isPerson","map","path","Component","isCompany","isConsultant","isInspector","isAccountant"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport {\r\n    publicRoutes,\r\n    personRoutes,\r\n    companyRoutes,\r\n    consultantRoutes,\r\n    inspectorRoutes,\r\n    accountantRoutes\r\n} from '../routes';\r\nimport { TYPES_ROUTE } from '../utils/consts';\r\nimport { Context } from '../index'\r\n\r\nconst AppRouter = () => {\r\n    const { user } = useContext(Context)\r\n    return ( <\r\n        Switch > {\r\n            user.isAuth.isPerson && personRoutes.map(({ path, Component }) =>\r\n                <\r\n                Route key = { path }\r\n                path = { path }\r\n                component = { Component }\r\n                exact / >\r\n            )\r\n        } {\r\n            user.isAuth.isCompany && companyRoutes.map(({ path, Component }) =>\r\n                <\r\n                Route key = { path }\r\n                path = { path }\r\n                component = { Component }\r\n                exact / >\r\n            )\r\n        } {\r\n            user.isAuth.isConsultant && consultantRoutes.map(({ path, Component }) =>\r\n                <\r\n                Route key = { path }\r\n                path = { path }\r\n                component = { Component }\r\n                exact / >\r\n            )\r\n        } {\r\n            user.isAuth.isInspector && inspectorRoutes.map(({ path, Component }) =>\r\n                <\r\n                Route key = { path }\r\n                path = { path }\r\n                component = { Component }\r\n                exact / >\r\n            )\r\n        } {\r\n            user.isAuth.isAccountant && accountantRoutes.map(({ path, Component }) =>\r\n                <\r\n                Route key = { path }\r\n                path = { path }\r\n                component = { Component }\r\n                exact / >\r\n            )\r\n        } {\r\n            publicRoutes.map(({ path, Component }) =>\r\n                <\r\n                Route key = { path }\r\n                path = { path }\r\n                component = { Component }\r\n                exact / >\r\n            )\r\n        } <\r\n        Redirect to = { TYPES_ROUTE }\r\n        /> <\r\n        /Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}