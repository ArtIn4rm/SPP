{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nexport default class UserState {\n  constructor() {\n    this._isPerson = false;\n    this._isCompany = false;\n    this._isConsultant = false;\n    this._isInspector = false;\n    this._isAccountant = false;\n    this._id = null;\n    this._path = '';\n    this._user = {};\n    makeAutoObservable(this);\n  }\n\n  setAuth(bool, role) {\n    switch (role) {\n      case 'Person':\n        this._isPerson = bool;\n        break;\n\n      case 'Company':\n        this._isCompany = bool;\n        break;\n\n      case 'Consultant':\n        this._isConsultant = bool;\n        break;\n\n      case 'Inspector':\n        this._isInspector = bool;\n        break;\n\n      case 'Accountant':\n        this._isAccountant = bool;\n        break;\n\n      default:\n        console.error('Invalid role');\n    }\n  }\n\n  setId(id) {}\n\n  setUser(user) {\n    this._user = user;\n  }\n\n  get isAuth() {\n    return {\n      isPerson: this._isPerson,\n      isCompany: this._isCompany,\n      isConsultant: this._isConsultant,\n      isInspector: this._isInspector,\n      isAccountant: this._isAccountant\n    };\n  }\n\n  get user() {\n    return this._user;\n  }\n\n}","map":{"version":3,"sources":["D:/test/SPP/SPP/app/client/src/service/UserState.js"],"names":["makeAutoObservable","UserState","constructor","_isPerson","_isCompany","_isConsultant","_isInspector","_isAccountant","_id","_path","_user","setAuth","bool","role","console","error","setId","id","setUser","user","isAuth","isPerson","isCompany","isConsultant","isInspector","isAccountant"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,MAAjC;AAEA,eAAe,MAAMC,SAAN,CAAe;AAC1BC,EAAAA,WAAW,GAAE;AACT,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACAV,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEDW,EAAAA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAY;AACf,YAAOA,IAAP;AACI,WAAK,QAAL;AAAe,aAAKV,SAAL,GAAiBS,IAAjB;AAAuB;;AACtC,WAAK,SAAL;AAAgB,aAAKR,UAAL,GAAkBQ,IAAlB;AAAwB;;AACxC,WAAK,YAAL;AAAmB,aAAKP,aAAL,GAAqBO,IAArB;AAA2B;;AAC9C,WAAK,WAAL;AAAkB,aAAKN,YAAL,GAAoBM,IAApB;AAA0B;;AAC5C,WAAK,YAAL;AAAmB,aAAKL,aAAL,GAAqBK,IAArB;AAA2B;;AAC9C;AAAUE,QAAAA,OAAO,CAACC,KAAR,CAAc,cAAd;AANd;AAQH;;AAEDC,EAAAA,KAAK,CAACC,EAAD,EAAI,CAER;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAM;AACT,SAAKT,KAAL,GAAaS,IAAb;AACH;;AAES,MAANC,MAAM,GAAE;AACR,WAAO;AAACC,MAAAA,QAAQ,EAAE,KAAKlB,SAAhB;AAA2BmB,MAAAA,SAAS,EAAE,KAAKlB,UAA3C;AAAuDmB,MAAAA,YAAY,EAAE,KAAKlB,aAA1E;AACHmB,MAAAA,WAAW,EAAE,KAAKlB,YADf;AAC6BmB,MAAAA,YAAY,EAAE,KAAKlB;AADhD,KAAP;AAEH;;AAEO,MAAJY,IAAI,GAAE;AACN,WAAO,KAAKT,KAAZ;AACH;;AAvCyB","sourcesContent":["import {makeAutoObservable} from 'mobx'\r\n\r\nexport default class UserState{\r\n    constructor(){\r\n        this._isPerson = false\r\n        this._isCompany = false\r\n        this._isConsultant = false\r\n        this._isInspector = false\r\n        this._isAccountant = false\r\n        this._id = null\r\n        this._path = ''\r\n        this._user = {}\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setAuth(bool, role){\r\n        switch(role){\r\n            case 'Person': this._isPerson = bool; break;\r\n            case 'Company': this._isCompany = bool; break;\r\n            case 'Consultant': this._isConsultant = bool; break;\r\n            case 'Inspector': this._isInspector = bool; break;\r\n            case 'Accountant': this._isAccountant = bool; break;\r\n            default:  console.error('Invalid role')\r\n        }\r\n    }\r\n\r\n    setId(id){\r\n\r\n    }\r\n\r\n    setUser(user){\r\n        this._user = user;\r\n    }\r\n\r\n    get isAuth(){\r\n        return {isPerson: this._isPerson, isCompany: this._isCompany, isConsultant: this._isConsultant, \r\n            isInspector: this._isInspector, isAccountant: this._isAccountant}\r\n    }\r\n\r\n    get user(){\r\n        return this._user\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}