{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useCallback, useState } from \"react\";\nvar EMPTY_ARRAY = [];\nexport function useForceUpdate() {\n  var _a = __read(useState(0), 2),\n      setTick = _a[1];\n\n  var update = useCallback(function () {\n    setTick(function (tick) {\n      return tick + 1;\n    });\n  }, EMPTY_ARRAY);\n  return update;\n}\nvar deprecatedMessages = [];\nexport function useDeprecated(msg) {\n  if (!deprecatedMessages.includes(msg)) {\n    deprecatedMessages.push(msg);\n    console.warn(msg);\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,IAAMC,WAAW,GAAU,EAA3B;AAEA,OAAM,SAAUC,cAAV,GAAwB;AACpB,kBAAcF,QAAQ,CAAC,CAAD,CAAtB,EAAyB,CAAzB;AAAA,MAAGG,OAAO,QAAV;;AAEN,MAAMC,MAAM,GAAGL,WAAW,CAAC;AACvBI,WAAO,CAAC,gBAAI;AAAI,iBAAI,GAAG,CAAP;AAAQ,KAAjB,CAAP;AACH,GAFyB,EAEvBF,WAFuB,CAA1B;AAIA,SAAOG,MAAP;AACH;AAED,IAAMC,kBAAkB,GAAa,EAArC;AAEA,OAAM,SAAUC,aAAV,CAAwBC,GAAxB,EAAmC;AACrC,MAAI,CAACF,kBAAkB,CAACG,QAAnB,CAA4BD,GAA5B,CAAL,EAAuC;AACnCF,sBAAkB,CAACI,IAAnB,CAAwBF,GAAxB;AACAG,WAAO,CAACC,IAAR,CAAaJ,GAAb;AACH;AACJ","names":["useCallback","useState","EMPTY_ARRAY","useForceUpdate","setTick","update","deprecatedMessages","useDeprecated","msg","includes","push","console","warn"],"sources":["D:\\test\\SPP\\SPP\\app\\client\\node_modules\\mobx-react-lite\\src\\utils\\utils.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nconst EMPTY_ARRAY: any[] = []\n\nexport function useForceUpdate() {\n    const [, setTick] = useState(0)\n\n    const update = useCallback(() => {\n        setTick(tick => tick + 1)\n    }, EMPTY_ARRAY)\n\n    return update\n}\n\nconst deprecatedMessages: string[] = []\n\nexport function useDeprecated(msg: string) {\n    if (!deprecatedMessages.includes(msg)) {\n        deprecatedMessages.push(msg)\n        console.warn(msg)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}